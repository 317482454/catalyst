language: python
sudo: false
fast_finish: true
python:
  - 2.7
  - 3.6

matrix:
  include:

    - python: 2.7
      env: NUMPY_VERSION=1.13.1 SCIPY_VERSION=0.19.1

    - python: 3.6
      env: NUMPY_VERSION=1.14 SCIPY_VERSION=1.0.0 

cache:
  directories:
    - $HOME/.cache/.pip/

before_install:
  - if [ ${$TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh; else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda update --yes conda

install:
  - conda info -a
  # - conda install conda=4.1.11 conda-build=3.0.19 anaconda-client=1.5.1 --yes

  - TALIB_VERSION=$(cat ./etc/requirements_talib.txt | sed "s/TA-Lib==\(.*\)/\1/")
  - IFS='.' read -r -a NPY_VERSION_ARR <<< "$NUMPY_VERSION"
  - CONDA_NPY=${NPY_VERSION_ARR[0]}${NPY_VERSION_ARR[1]}
  - CONDA_PY=$TRAVIS_PYTHON_VERSION

  - conda create --yes -n testenv --use-local pip python=$TRAVIS_PYTHON_VERSION numpy=$NUMPY_VERSION scipy=$SCIPY_VERSION libgfortran=3.0 ta-lib=$TALIB_VERSION -f etc/python${$TRAVIS_PYTHON_VERSION}-environment.yml
  - source activate testenv

  - CACHE_DIR="$HOME/.cache/.pip/pip_np""$CONDA_NPY"
  - pip install --upgrade pip coverage coveralls --cache-dir=$CACHE_DIR
  - pip install -r etc/requirements.txt --cache-dir=$CACHE_DIR
  - pip install -r etc/requirements_dev.txt --cache-dir=$CACHE_DIR
  - pip install -r etc/requirements_blaze.txt --cache-dir=$CACHE_DIR  # this uses git requirements right now
  - pip install -r etc/requirements_talib.txt --cache-dir=$CACHE_DIR
  - pip install -e .[all] --cache-dir=$CACHE_DIR
before_script:
  - pip freeze | sort
script:
  - flake8 catalyst tests
  - nosetests --with-coverage

after_success:
  - coveralls

branches:
  only:
    - travis
